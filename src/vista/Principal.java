/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.awt.Desktop;
import java.awt.Dimension;
import java.io.File;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;

/**
 *
 * @author domin
 */
public class Principal extends javax.swing.JFrame {

    public static JDesktopPane jDesktopPane_menu;

    public Principal() {
        initComponents();
        this.setSize(new Dimension(1200, 700));
        // Maximiza la ventana para ajustarse a la pantalla
        this.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        // Centra la ventana en la pantalla
        this.setLocationRelativeTo(null);

        this.setLayout(null);
        jDesktopPane_menu = new JDesktopPane();

        int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
        int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
        this.jDesktopPane_menu.setBounds(0, 0, ancho, (alto - 110));
        this.add(jDesktopPane_menu);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemplaca = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuUsuarioNuevo = new javax.swing.JMenu();
        jMenuItem6agregarusuario = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItemSalir = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonMenuListar (1).png"))); // NOI18N
        jMenu1.setText("Tramites");
        jMenu1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jMenu1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu1.setPreferredSize(new java.awt.Dimension(170, 60));

        jMenuItemplaca.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItemplaca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/placa (1).jpeg"))); // NOI18N
        jMenuItemplaca.setText("Trámite de Placa");
        jMenuItemplaca.setPreferredSize(new java.awt.Dimension(220, 40));
        jMenuItemplaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemplacaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemplaca);

        jMenuItem2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/proveedor.png"))); // NOI18N
        jMenuItem2.setText("Permiso de Construcción");
        jMenuItem2.setPreferredSize(new java.awt.Dimension(220, 40));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/producto.png"))); // NOI18N
        jMenuItem3.setText("Aviso de Operaciones");
        jMenuItem3.setPreferredSize(new java.awt.Dimension(220, 40));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonMenuActualizar (1).png"))); // NOI18N
        jMenu2.setText("Citas ");
        jMenu2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jMenu2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu2.setMinimumSize(new java.awt.Dimension(170, 60));
        jMenu2.setPreferredSize(new java.awt.Dimension(170, 60));

        jMenuItem5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancelar (1).png"))); // NOI18N
        jMenuItem5.setText("Cancelar Cita");
        jMenuItem5.setPreferredSize(new java.awt.Dimension(160, 40));
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/descarga (1).png"))); // NOI18N
        jMenuItem4.setText("Reprogramar");
        jMenuItem4.setPreferredSize(new java.awt.Dimension(160, 40));
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonMenuBuscar (1).png"))); // NOI18N
        jMenu3.setText("Consulta");
        jMenu3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jMenu3.setMinimumSize(new java.awt.Dimension(170, 60));
        jMenu3.setPreferredSize(new java.awt.Dimension(170, 60));

        jMenuItem7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonMenuBuscar (1).png"))); // NOI18N
        jMenuItem7.setText("Buscar Citas");
        jMenuItem7.setPreferredSize(new java.awt.Dimension(160, 40));
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Actualizacion (1).png"))); // NOI18N
        jMenuItem9.setText("Actulizar Datos");
        jMenuItem9.setPreferredSize(new java.awt.Dimension(167, 40));
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/historial_1.png"))); // NOI18N
        jMenu5.setText("Reporte");
        jMenu5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jMenu5.setPreferredSize(new java.awt.Dimension(170, 60));

        jMenuItem1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reporte1.png"))); // NOI18N
        jMenuItem1.setText("Generar PDF");
        jMenuItem1.setPreferredSize(new java.awt.Dimension(180, 40));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenuBar1.add(jMenu5);

        jMenuUsuarioNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo-cliente.png"))); // NOI18N
        jMenuUsuarioNuevo.setText("Usuarios");
        jMenuUsuarioNuevo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jMenuUsuarioNuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jMenuUsuarioNuevo.setMinimumSize(new java.awt.Dimension(170, 60));
        jMenuUsuarioNuevo.setPreferredSize(new java.awt.Dimension(170, 60));

        jMenuItem6agregarusuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem6agregarusuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo_1.png"))); // NOI18N
        jMenuItem6agregarusuario.setText("Nuevo Usuario");
        jMenuItem6agregarusuario.setPreferredSize(new java.awt.Dimension(180, 40));
        jMenuItem6agregarusuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6agregarusuarioActionPerformed(evt);
            }
        });
        jMenuUsuarioNuevo.add(jMenuItem6agregarusuario);

        jMenuItem6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cliente_1.png"))); // NOI18N
        jMenuItem6.setText("Administar Usuario");
        jMenuItem6.setPreferredSize(new java.awt.Dimension(180, 40));
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenuUsuarioNuevo.add(jMenuItem6);

        jMenuBar1.add(jMenuUsuarioNuevo);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar-sesion.png"))); // NOI18N
        jMenu4.setText("Cerrar");
        jMenu4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jMenu4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jMenu4.setMinimumSize(new java.awt.Dimension(170, 60));
        jMenu4.setPreferredSize(new java.awt.Dimension(170, 60));

        jMenuItemSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItemSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar-sesion.png"))); // NOI18N
        jMenuItemSalir.setText("Cerrar Sesión");
        jMenuItemSalir.setPreferredSize(new java.awt.Dimension(170, 30));
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItemSalir);

        jMenuBar1.add(jMenu4);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar-sesion (2) (1).png"))); // NOI18N
        jMenu6.setText("Salir");
        jMenu6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jMenu6.setPreferredSize(new java.awt.Dimension(170, 60));

        jMenuItem8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir-ico.png"))); // NOI18N
        jMenuItem8.setText("Salir");
        jMenuItem8.setPreferredSize(new java.awt.Dimension(170, 40));
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem8);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1191, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemplacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemplacaActionPerformed
        Tramite_placa tramitePlaca = new Tramite_placa();
        jDesktopPane_menu.add(tramitePlaca);

        // Calcula la posición para centrar el JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = tramitePlaca.getWidth();
        int internalFrameHeight = tramitePlaca.getHeight();

        // Calcula las coordenadas para centrar el internal frame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

        // Establece la ubicación
        tramitePlaca.setLocation(x, y);

        // Muestra el internal frame
        tramitePlaca.setVisible(true);

        try {
            tramitePlaca.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jMenuItemplacaActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        Permiso_construccion permisoConstruccion = new Permiso_construccion();
        jDesktopPane_menu.add(permisoConstruccion);

        // Calcula la posición para centrar el JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = permisoConstruccion.getWidth();
        int internalFrameHeight = permisoConstruccion.getHeight();

        // Calcula las coordenadas para centrar el internal frame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

        // Establece la ubicación
        permisoConstruccion.setLocation(x, y);

        // Muestra el internal frame
        permisoConstruccion.setVisible(true);

        try {
            permisoConstruccion.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        Tramite_aviso_operacion tramiteAviso = new Tramite_aviso_operacion();
        jDesktopPane_menu.add(tramiteAviso);

        // Calcula la posición para centrar el JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = tramiteAviso.getWidth();
        int internalFrameHeight = tramiteAviso.getHeight();

        // Calcula las coordenadas para centrar el internal frame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

        // Establece la ubicación
        tramiteAviso.setLocation(x, y);

        // Muestra el internal frame
        tramiteAviso.setVisible(true);

        try {
            tramiteAviso.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        Reprogramar_cita reprogramarcita = new Reprogramar_cita();
        jDesktopPane_menu.add(reprogramarcita);

        // Calcula la posición para centrar el JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = reprogramarcita.getWidth();
        int internalFrameHeight = reprogramarcita.getHeight();

        // Calcula las coordenadas para centrar el internal frame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

        // Establece la ubicación
        reprogramarcita.setLocation(x, y);

        // Muestra el internal frame
        reprogramarcita.setVisible(true);

        try {
            reprogramarcita.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        Cancelar cancelar = new Cancelar();
        jDesktopPane_menu.add(cancelar);

        // Calcula la posición para centrar el JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = cancelar.getWidth();
        int internalFrameHeight = cancelar.getHeight();

        // Calcula las coordenadas para centrar el internal frame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

        // Establece la ubicación
        cancelar.setLocation(x, y);

        // Muestra el internal frame
        cancelar.setVisible(true);

        try {
            cancelar.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6agregarusuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6agregarusuarioActionPerformed
        Nuevo_usuario nuevoUsuario = new Nuevo_usuario();

        // Agregar el JInternalFrame al JDesktopPane
        jDesktopPane_menu.add(nuevoUsuario);

// Calcula la posición para centrar el JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = nuevoUsuario.getWidth();
        int internalFrameHeight = nuevoUsuario.getHeight();

// Calcula las coordenadas para centrar el internal frame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

// Establece la ubicación
        nuevoUsuario.setLocation(x, y);

// Mostrar el JInternalFrame
        nuevoUsuario.setVisible(true);

        try {
            // Hacer que el JInternalFrame obtenga el foco
            nuevoUsuario.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem6agregarusuarioActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        Buscar_Cita buscarFrame = new Buscar_Cita();

        // Agregar el JInternalFrame al JDesktopPane
        jDesktopPane_menu.add(buscarFrame);

        // Obtener las dimensiones del JDesktopPane y del JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = buscarFrame.getWidth();
        int internalFrameHeight = buscarFrame.getHeight();

        // Calcular las coordenadas para centrar el JInternalFrame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

        // Establecer la posición del JInternalFrame
        buscarFrame.setLocation(x, y);

        // Mostrar el JInternalFrame
        buscarFrame.setVisible(true);

        try {
            // Establecer el JInternalFrame como seleccionado (opcional)
            buscarFrame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        LOGIN loginForm = new LOGIN();

        // Hacer visible el formulario LOGIN
        loginForm.setVisible(true);

        // Cerrar la ventana actual (la interfaz principal)
        this.dispose();
    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        Admin_usuario adminUsuario = new Admin_usuario();

// Agregar el JInternalFrame al JDesktopPane
        jDesktopPane_menu.add(adminUsuario);

// Calcula la posición para centrar el JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = adminUsuario.getWidth();
        int internalFrameHeight = adminUsuario.getHeight();

// Calcula las coordenadas para centrar el internal frame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

// Establece la ubicación
        adminUsuario.setLocation(x, y);

// Mostrar el JInternalFrame
        adminUsuario.setVisible(true);

        try {
            // Hacer que el JInternalFrame obtenga el foco
            adminUsuario.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String filePath = "reporte_bd.pdf";

        // Crear el documento PDF
        com.itextpdf.text.Document document = new com.itextpdf.text.Document();

        try {
            // Crear escritor para el archivo PDF
            com.itextpdf.text.pdf.PdfWriter writer = com.itextpdf.text.pdf.PdfWriter.getInstance(document, new java.io.FileOutputStream(filePath));

            // Abrir el documento
            document.open();

            // Crear imagen y mantener su tamaño original
            com.itextpdf.text.Image logo = com.itextpdf.text.Image.getInstance("F:/Almacenamiento/Documentos/NetBeansProjects/Sistema_citas/src/imagenes/reporte.png");
            logo.setAbsolutePosition(50, document.getPageSize().getHeight() - 120); // Coordenadas para posicionar la imagen a la izquierda al nivel del título
            document.add(logo);

            // Agregar título principal centrado
            com.itextpdf.text.Font titleFont = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.TIMES_ROMAN, 14, com.itextpdf.text.Font.BOLD);
            com.itextpdf.text.Paragraph title = new com.itextpdf.text.Paragraph("Reporte de Citas Realizadas", titleFont);
            title.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER); // Alineado al centro
            document.add(title);

            // Agregar subtítulo centrado
            com.itextpdf.text.Font subtitleFont = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.TIMES_ROMAN, 12, com.itextpdf.text.Font.ITALIC);
            com.itextpdf.text.Paragraph subtitle = new com.itextpdf.text.Paragraph("Sistema Municipal", subtitleFont);
            subtitle.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER); // Alineado al centro
            document.add(subtitle);

            // Agregar "Departamento de Trámites Municipales" centrado
            com.itextpdf.text.Font departmentFont = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.TIMES_ROMAN, 12, com.itextpdf.text.Font.NORMAL);
            com.itextpdf.text.Paragraph department = new com.itextpdf.text.Paragraph("Departamento de Trámites Municipales", departmentFont);
            department.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER); // Alineado al centro
            document.add(department);

            // Agregar teléfono y dirección centrado
            com.itextpdf.text.Paragraph phone = new com.itextpdf.text.Paragraph("Teléfono: 0000-0000", departmentFont);
            phone.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER); // Alineado al centro
            document.add(phone);

            com.itextpdf.text.Paragraph address = new com.itextpdf.text.Paragraph("Dirección: Panamá", departmentFont);
            address.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER); // Alineado al centro
            document.add(address);

            // Espacio entre encabezado y tablas
            document.add(new com.itextpdf.text.Paragraph("\n"));

            // Agregar fecha y hora
            java.time.LocalDate currentDate = java.time.LocalDate.now();
            java.time.LocalTime currentTime = java.time.LocalTime.now();
            java.time.format.DateTimeFormatter timeFormatter = java.time.format.DateTimeFormatter.ofPattern("HH:mm:ss");
            com.itextpdf.text.Paragraph dateParagraph = new com.itextpdf.text.Paragraph("Fecha: " + currentDate + " | Hora: " + currentTime.format(timeFormatter));
            document.add(dateParagraph);
            document.add(new com.itextpdf.text.Paragraph("--------------------------------------------------"));

            // Utilizar la clase conectar para obtener la conexión
            modelo.conectar conexion = new modelo.conectar();
            java.sql.Connection conn = conexion.conexion(); // Método que retorna la conexión

            // Listar las tablas que deseas incluir
            String[] tablas = {"TramitePlaca", "PermisoConstruccion", "AvisoOperaciones"};

            for (String tabla : tablas) {
                // Agregar título de la tabla centrado
                com.itextpdf.text.Font tableTitleFont = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.TIMES_ROMAN, 14, com.itextpdf.text.Font.BOLD);
                com.itextpdf.text.Paragraph tableTitle = new com.itextpdf.text.Paragraph("Tabla: " + tabla, tableTitleFont);
                tableTitle.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER); // Alineado al centro
                document.add(tableTitle);

                // Crear tabla para el PDF
                java.sql.Statement stmt = conn.createStatement();
                String sql = "SELECT * FROM " + tabla;
                java.sql.ResultSet rs = stmt.executeQuery(sql);

                // Obtener metadatos para los encabezados
                java.sql.ResultSetMetaData metaData = rs.getMetaData();
                int columnCount = metaData.getColumnCount();

                // Crear la tabla PDF
                com.itextpdf.text.pdf.PdfPTable pdfTable = new com.itextpdf.text.pdf.PdfPTable(columnCount);
                pdfTable.setWidthPercentage(100);

                // Ajustar el tamaño de las celdas
                com.itextpdf.text.Font headerFont = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.TIMES_ROMAN, 10, com.itextpdf.text.Font.BOLD);
                com.itextpdf.text.Font cellFont = new com.itextpdf.text.Font(com.itextpdf.text.Font.FontFamily.TIMES_ROMAN, 9);

                pdfTable.setSpacingBefore(10f);
                pdfTable.setSpacingAfter(10f);
                pdfTable.getDefaultCell().setPadding(5f);

                // Agregar encabezados de columna
                for (int i = 1; i <= columnCount; i++) {
                    com.itextpdf.text.Phrase header = new com.itextpdf.text.Phrase(metaData.getColumnName(i), headerFont);
                    pdfTable.addCell(header);
                }

                // Agregar filas de la tabla
                while (rs.next()) {
                    for (int i = 1; i <= columnCount; i++) {
                        com.itextpdf.text.Phrase cell = new com.itextpdf.text.Phrase(rs.getString(i), cellFont);
                        pdfTable.addCell(cell);
                    }
                }

                // Agregar la tabla al documento
                document.add(pdfTable);
                document.add(new com.itextpdf.text.Paragraph("--------------------------------------------------"));
            }

            // Cerrar la conexión
            conn.close();

            // Cerrar el documento
            document.close();

            // Mostrar mensaje de éxito
            javax.swing.JOptionPane.showMessageDialog(this, "PDF generado exitosamente en: " + filePath);

            // Abrir el archivo PDF automáticamente
            File pdfFile = new File(filePath);
            if (pdfFile.exists()) {
                Desktop.getDesktop().open(pdfFile);  // Esto abrirá el PDF con la aplicación predeterminada
            } else {
                JOptionPane.showMessageDialog(this, "El archivo PDF no existe.");
            }

        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Error al generar el PDF: " + e.getMessage());
        }


    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        Editar editar = new Editar();

        // Agregar el JInternalFrame al JDesktopPane
        jDesktopPane_menu.add(editar);

        // Obtener las dimensiones del JDesktopPane y del JInternalFrame
        int desktopWidth = jDesktopPane_menu.getWidth();
        int desktopHeight = jDesktopPane_menu.getHeight();
        int internalFrameWidth = editar.getWidth();
        int internalFrameHeight = editar.getHeight();

        // Calcular las coordenadas para centrar el JInternalFrame
        int x = (desktopWidth - internalFrameWidth) / 2;
        int y = (desktopHeight - internalFrameHeight) / 2;

        // Establecer la posición del JInternalFrame
        editar.setLocation(x, y);

        // Mostrar el JInternalFrame
        editar.setVisible(true);

        try {
            // Establecer el JInternalFrame como seleccionado (opcional)
            editar.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem6agregarusuario;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenuItem jMenuItemplaca;
    private javax.swing.JMenu jMenuUsuarioNuevo;
    // End of variables declaration//GEN-END:variables
}
